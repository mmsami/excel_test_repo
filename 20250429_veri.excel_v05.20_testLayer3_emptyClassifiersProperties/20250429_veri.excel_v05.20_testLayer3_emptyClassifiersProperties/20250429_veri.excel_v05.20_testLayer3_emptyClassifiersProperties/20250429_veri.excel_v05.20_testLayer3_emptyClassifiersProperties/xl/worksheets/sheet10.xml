<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac xr xr2 xr3" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac" xmlns:xr="http://schemas.microsoft.com/office/spreadsheetml/2014/revision" xmlns:xr2="http://schemas.microsoft.com/office/spreadsheetml/2015/revision2" xmlns:xr3="http://schemas.microsoft.com/office/spreadsheetml/2016/revision3" xr:uid="{00000000-0001-0000-0300-000000000000}"><sheetPr codeName="meta_TypedModelElements"><tabColor rgb="FF0070C0"/></sheetPr><dimension ref="A1:BN2"/><sheetViews><sheetView zoomScaleNormal="100" workbookViewId="0"><pane xSplit="2" ySplit="1" topLeftCell="C2" activePane="bottomRight" state="frozen"/><selection activeCell="A63" sqref="A63"/><selection pane="topRight" activeCell="A63" sqref="A63"/><selection pane="bottomLeft" activeCell="A63" sqref="A63"/><selection pane="bottomRight" activeCell="A3" sqref="A3:XFD100"/></sheetView></sheetViews><sheetFormatPr baseColWidth="10" defaultColWidth="11.5" defaultRowHeight="15" outlineLevelCol="4"/><cols><col min="1" max="1" width="43.5" style="2" customWidth="1"/><col min="2" max="2" width="11.83203125" style="2" customWidth="1" outlineLevel="1"/><col min="3" max="3" width="29.6640625" style="2" bestFit="1" customWidth="1" outlineLevel="1"/><col min="4" max="4" width="11.5" style="2" customWidth="1"/><col min="5" max="5" width="7.5" style="2" customWidth="1" outlineLevel="1"/><col min="6" max="6" width="13.5" style="2" bestFit="1" customWidth="1"/><col min="7" max="7" width="6.83203125" style="2" bestFit="1" customWidth="1"/><col min="8" max="8" width="36.1640625" style="2" customWidth="1" outlineLevel="2"/><col min="9" max="9" width="20" style="2" customWidth="1" outlineLevel="2"/><col min="10" max="11" width="38" style="2" customWidth="1" outlineLevel="1"/><col min="12" max="12" width="18.6640625" style="2" customWidth="1"/><col min="13" max="13" width="45.5" style="2" customWidth="1" outlineLevel="4"/><col min="14" max="15" width="26.5" style="2" customWidth="1" outlineLevel="4"/><col min="16" max="17" width="32.83203125" style="2" customWidth="1" outlineLevel="4"/><col min="18" max="18" width="31.5" style="2" customWidth="1" outlineLevel="2"/><col min="19" max="19" width="30.1640625" style="2" customWidth="1" outlineLevel="1"/><col min="20" max="20" width="16.83203125" style="2" customWidth="1"/><col min="21" max="28" width="25.1640625" style="2" hidden="1" customWidth="1" outlineLevel="2"/><col min="29" max="31" width="25.1640625" style="2" hidden="1" customWidth="1" outlineLevel="1"/><col min="32" max="32" width="19.5" style="2" hidden="1" customWidth="1" outlineLevel="1"/><col min="33" max="33" width="10.5" style="2" customWidth="1" collapsed="1"/><col min="34" max="34" width="7.1640625" style="2" customWidth="1"/><col min="35" max="35" width="4.5" style="2" customWidth="1"/><col min="36" max="37" width="11.1640625" style="2" customWidth="1" outlineLevel="1"/><col min="38" max="38" width="11.6640625" style="2" customWidth="1"/><col min="39" max="39" width="11.6640625" style="2" customWidth="1" outlineLevel="1"/><col min="40" max="40" width="18.1640625" style="2" customWidth="1" outlineLevel="1"/><col min="41" max="41" width="11.5" style="2" customWidth="1"/><col min="42" max="42" width="7.1640625" style="2" customWidth="1" outlineLevel="1"/><col min="43" max="43" width="7.1640625" style="2" customWidth="1" outlineLevel="2"/><col min="44" max="44" width="30.5" style="2" customWidth="1" outlineLevel="2"/><col min="45" max="45" width="23.5" style="2" customWidth="1" outlineLevel="1"/><col min="46" max="47" width="22.5" style="2" customWidth="1" outlineLevel="2"/><col min="48" max="48" width="31.5" style="2" customWidth="1" outlineLevel="2"/><col min="49" max="49" width="21.1640625" style="2" customWidth="1" outlineLevel="1"/><col min="50" max="50" width="17" style="2" customWidth="1" outlineLevel="2"/><col min="51" max="51" width="17" style="2" customWidth="1" outlineLevel="1"/><col min="52" max="53" width="17" style="2" customWidth="1" outlineLevel="2"/><col min="54" max="54" width="109.5" style="2" customWidth="1" outlineLevel="2"/><col min="55" max="56" width="166.5" style="2" customWidth="1" outlineLevel="2"/><col min="57" max="57" width="7.5" style="2" customWidth="1" outlineLevel="1"/><col min="58" max="58" width="7.83203125" style="2" customWidth="1" outlineLevel="2"/><col min="59" max="59" width="34" style="2" customWidth="1" outlineLevel="2"/><col min="60" max="60" width="90" style="2" customWidth="1" outlineLevel="2"/><col min="61" max="61" width="7.5" style="2" customWidth="1" outlineLevel="2"/><col min="62" max="64" width="58.5" style="2" customWidth="1" outlineLevel="2"/><col min="65" max="65" width="8.5" style="2" customWidth="1" outlineLevel="1"/><col min="66" max="66" width="86.6640625" style="3" customWidth="1"/><col min="67" max="16384" width="11.5" style="2"/></cols><sheetData><row r="1" spans="1:66" ht="168.75" customHeight="1" thickTop="1" thickBot="1"><c r="A1" s="18" t="s"><v>0</v></c><c r="B1" s="18" t="s"><v>1339</v></c><c r="C1" s="18" t="s"><v>61</v></c><c r="D1" s="18" t="s"><v>5</v></c><c r="E1" s="18" t="s"><v>345</v></c><c r="F1" s="18" t="s"><v>34</v></c><c r="G1" s="18" t="s"><v>206</v></c><c r="H1" s="18" t="s"><v>1346</v></c><c r="I1" s="18" t="s"><v>149</v></c><c r="J1" s="18" t="s"><v>194</v></c><c r="K1" s="18" t="s"><v>1464</v></c><c r="L1" s="18" t="s"><v>107</v></c><c r="M1" s="18" t="s"><v>399</v></c><c r="N1" s="18" t="s"><v>146</v></c><c r="O1" s="18" t="s"><v>197</v></c><c r="P1" s="18" t="s"><v>22</v></c><c r="Q1" s="18" t="s"><v>195</v></c><c r="R1" s="18" t="s"><v>196</v></c><c r="S1" s="18" t="s"><v>70</v></c><c r="T1" s="18" t="s"><v>1</v></c><c r="U1" s="18" t="s"><v>172</v></c><c r="V1" s="18" t="s"><v>173</v></c><c r="W1" s="18" t="s"><v>174</v></c><c r="X1" s="18" t="s"><v>169</v></c><c r="Y1" s="18" t="s"><v>170</v></c><c r="Z1" s="18" t="s"><v>171</v></c><c r="AA1" s="18" t="s"><v>168</v></c><c r="AB1" s="18" t="s"><v>198</v></c><c r="AC1" s="18" t="s"><v>177</v></c><c r="AD1" s="18" t="s"><v>1968</v></c><c r="AE1" s="18" t="s"><v>1347</v></c><c r="AF1" s="18" t="s"><v>1476</v></c><c r="AG1" s="18" t="s"><v>4</v></c><c r="AH1" s="18" t="s"><v>240</v></c><c r="AI1" s="18" t="s"><v>241</v></c><c r="AJ1" s="18" t="s"><v>1352</v></c><c r="AK1" s="18" t="s"><v>1475</v></c><c r="AL1" s="18" t="s"><v>359</v></c><c r="AM1" s="18" t="s"><v>1353</v></c><c r="AN1" s="18" t="s"><v>1479</v></c><c r="AO1" s="18" t="s"><v>412</v></c><c r="AP1" s="18" t="s"><v>209</v></c><c r="AQ1" s="18" t="s"><v>1354</v></c><c r="AR1" s="18" t="s"><v>1477</v></c><c r="AS1" s="18" t="s"><v>105</v></c><c r="AT1" s="18" t="s"><v>142</v></c><c r="AU1" s="18" t="s"><v>1355</v></c><c r="AV1" s="18" t="s"><v>1480</v></c><c r="AW1" s="18" t="s"><v>106</v></c><c r="AX1" s="18" t="s"><v>1356</v></c><c r="AY1" s="18" t="s"><v>143</v></c><c r="AZ1" s="18" t="s"><v>167</v></c><c r="BA1" s="18" t="s"><v>175</v></c><c r="BB1" s="18" t="s"><v>166</v></c><c r="BC1" s="18" t="s"><v>188</v></c><c r="BD1" s="18" t="s"><v>187</v></c><c r="BE1" s="18" t="s"><v>190</v></c><c r="BF1" s="18" t="s"><v>193</v></c><c r="BG1" s="18" t="s"><v>282</v></c><c r="BH1" s="18" t="s"><v>192</v></c><c r="BI1" s="18" t="s"><v>191</v></c><c r="BJ1" s="19" t="s"><v>283</v></c><c r="BK1" s="19" t="s"><v>284</v></c><c r="BL1" s="19" t="s"><v>281</v></c><c r="BM1" s="19" t="s"><v>1358</v></c><c r="BN1" s="55" t="s"><v>54</v></c></row><row r="2" spans="1:66" ht="18.75" customHeight="1" thickTop="1"><c r="A2" s="2" t="s"><v>299</v></c><c r="B2" s="2" t="s"><v>56</v></c><c r="C2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Kind]]="","",
      INDEX(meta_Classifiers[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Kind]],meta_Classifiers[Display Qualified],0))))</f><v>_Attribute</v></c><c r="D2" s="10" t="s"><v>12</v></c><c r="E2" s="10"><v>1</v></c><c r="F2" s="10"/><c r="G2" s="10"/><c r="I2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind]]="Function",
INDEX(meta_TypedModelElements[Property - Owning Class:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Function - Owning Property:src]],meta_TypedModelElements[ID],0)),
IF(meta_TypedModelElements[[#This Row],[Kind]]="Parameter", INDEX(meta_TypedModelElements[Containing Class],MATCH(meta_TypedModelElements[[#This Row],[Parameter - Owning Function:src]],meta_TypedModelElements[ID],0)),
meta_TypedModelElements[[#This Row],[Property - Owning Class:src]]))</f><v/></c><c r="J2" s="2" t="str"><f xml:space="preserve"> _xlfn.IFNA( IF( TRIM( meta_TypedModelElements[[#This Row],[Containing Class]] ) = "",
        "",
    IF( LEFT(meta_TypedModelElements[[#This Row],[Containing Class]],1)="_",
        RIGHT(meta_TypedModelElements[[#This Row],[Containing Class]],LEN(meta_TypedModelElements[[#This Row],[Containing Class]])-1),
    IF( TRIM( meta_TypedModelElements[[#This Row],[Package]] )
            &lt;&gt; TRIM( INDEX( meta_Classifiers[Package], MATCH( meta_TypedModelElements[[#This Row],[Containing Class]], meta_Classifiers[ID],0 ) ) ),
        TRIM( INDEX( meta_Classifiers[Package], MATCH( meta_TypedModelElements[[#This Row],[Containing Class]], meta_Classifiers[ID], 0 ) ) )
            &amp; "::"
            &amp; INDEX( meta_Classifiers[Display], MATCH( meta_TypedModelElements[[#This Row],[Containing Class]], meta_Classifiers[ID], 0 ) ),
        INDEX( meta_Classifiers[Display], MATCH( meta_TypedModelElements[[#This Row],[Containing Class]], meta_Classifiers[ID], 0 ) )
    ))), "")</f><v/></c><c r="K2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Property - Owning Class:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Property - Owning Class:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Property - Owning Class]]="","",
      INDEX(meta_Classifiers[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Property - Owning Class]],meta_Classifiers[Display Qualified],0))))</f><v/></c><c r="L2" s="10"/><c r="M2" s="2" t="str"><f xml:space="preserve"> IF(meta_TypedModelElements[[#This Row],[Kind:src]]="_Parameter",
  INDEX(meta_TypedModelElements[Display Qualified],MATCH(meta_TypedModelElements[[#This Row],[Parameter - Owning Function:src]],meta_TypedModelElements[ID],0))&amp;"."&amp;meta_TypedModelElements[[#This Row],[Display without Class]],
IF(TRIM(meta_TypedModelElements[[#This Row],[Package]])="","",TRIM(LOWER(meta_TypedModelElements[[#This Row],[Package]]))&amp;"::")&amp;meta_TypedModelElements[[#This Row],[Display]])</f><v/></c><c r="N2" s="10"/><c r="O2" s="10"/><c r="P2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Containing Class:display]]="","",meta_TypedModelElements[[#This Row],[Containing Class:display]]&amp;".")&amp;meta_TypedModelElements[[#This Row],[Display without Class]]</f><v/></c><c r="Q2" s="2" t="str"><f ca="1">camelCaseLower(meta_TypedModelElements[[#This Row],[Name or Type]])</f><v/></c><c r="R2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Name or Type]]="","",meta_TypedModelElements[[#This Row],[Name or Type Camel Case Lower]])&amp;IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]="_Function","("&amp;meta_TypedModelElements[[#This Row],[Function - Parameters Display]]&amp;")","")</f><v/></c><c r="S2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:src]]="_Function",INDEX(meta_TypedModelElements[Name or Type],MATCH(meta_TypedModelElements[[#This Row],[Function - Owning Property:src]],meta_TypedModelElements[ID],0)),IF(TRIM(meta_TypedModelElements[[#This Row],[Name]])="",meta_TypedModelElements[[#This Row],[Type Name]],meta_TypedModelElements[[#This Row],[Name]]))</f><v/></c><c r="T2" s="10"/><c r="U2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 6]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="V2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 5]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="W2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 4]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="X2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 3]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="Y2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 2]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="Z2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 1]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="AA2" s="2" t="e"><f>INDEX(meta_Classifiers[Class - Generalization:srcLastSaved],MATCH(meta_TypedModelElements[[#This Row],[Type:src]],meta_Classifiers[ID],0))</f><v>#N/A</v></c><c r="AB2" s="2"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Function",meta_TypedModelElements[[#This Row],[Type]],INDEX(meta_TypedModelElements[Type],MATCH(meta_TypedModelElements[[#This Row],[Function - Owning Property:src]],meta_TypedModelElements[ID],0)))</f><v>0</v></c><c r="AC2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Function",meta_TypedModelElements[[#This Row],[Type:src]],INDEX(meta_TypedModelElements[Type:src],MATCH(meta_TypedModelElements[[#This Row],[Function - Owning Property:src]],meta_TypedModelElements[ID],0)))</f><v/></c><c r="AD2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Type:src]]="","",INDEX(meta_Classifiers[Name],MATCH(meta_TypedModelElements[[#This Row],[Type:src]],meta_Classifiers[ID],0)))</f><v/></c><c r="AF2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Type:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Type:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Type]]="","",
      INDEX(meta_Classifiers[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Type]],meta_Classifiers[Display Qualified],0))))</f><v/></c><c r="AG2" s="10"/><c r="AH2" s="10"/><c r="AI2" s="10"/><c r="AJ2" s="4"/><c r="AK2" s="4" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Reference - Opposite:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Reference - Opposite:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Reference - Opposite]]="","",
      INDEX(meta_TypedModelElements[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Reference - Opposite]],meta_TypedModelElements[Display Qualified],0))))</f><v/></c><c r="AL2" s="10"/><c r="AM2" s="4"/><c r="AN2" s="4" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Reference - Display and Select Property:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Reference - Display and Select Property:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Reference - Display and Select Property]]="","",
      INDEX(meta_TypedModelElements[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Reference - Display and Select Property]],meta_TypedModelElements[Display Qualified],0))))</f><v/></c><c r="AO2" s="10"/><c r="AP2" s="10"/><c r="AQ2" s="4"/><c r="AR2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Function - Owning Property:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Function - Owning Property:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Function - Owning Property]]="","",
      INDEX(meta_TypedModelElements[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Function - Owning Property]],meta_TypedModelElements[Display Qualified],0))))</f><v/></c><c r="AS2" s="10"/><c r="AV2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Parameter - Owning Function:srcLastSaved]]&lt;&gt;"", meta_TypedModelElements[[#This Row],[Parameter - Owning Function:srcLastSaved]],
   IF(meta_TypedModelElements[[#This Row],[Parameter - Owning Function]]="","",
      INDEX(meta_TypedModelElements[ID],
         MATCH(meta_TypedModelElements[[#This Row],[Parameter - Owning Function]],meta_TypedModelElements[Display Qualified],0))))</f><v/></c><c r="AW2" s="10"/><c r="AY2" s="43"/><c r="AZ2" s="2" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Reference","",
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type:src]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 1]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 2]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 3]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 4]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 5]],meta_Tables[Instances Class:src],0)),
_xlfn.IFNA(INDEX(#REF!,MATCH(meta_TypedModelElements[[#This Row],[Type Super Type 6]],meta_Tables[Instances Class:src],0)),"")))))))
)</f><v/></c><c r="BA2" s="2" t="str"><f>"[@["&amp;meta_TypedModelElements[[#This Row],[Name or Type]]&amp;":src]]"</f><v>[@[:src]]</v></c><c r="BB2" s="14" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Reference","",
"= IFNA( IF( TRIM( "&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;" ) = "&amp;CHAR(34)&amp;""&amp;CHAR(34)&amp;",
"&amp;"        "&amp;CHAR(34)&amp;""&amp;CHAR(34)&amp;",
"&amp;"    IF( LEFT("&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;",1)="&amp;CHAR(34)&amp;"_"&amp;CHAR(34)&amp;",
"&amp;"        RIGHT("&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;",LEN("&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;")-1),
"&amp;"    IF( TRIM( [@Package] )
"&amp;"            &lt;&gt; TRIM( INDEX( "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[Package], MATCH( "&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;", "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[ID],0 ) ) ),
"&amp;"        TRIM( INDEX( "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[Package], MATCH( "&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;", "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[ID], 0 ) ) )
"&amp;"            &amp; "&amp;CHAR(34)&amp;"::"&amp;CHAR(34)&amp;"
"&amp;"            &amp; INDEX( "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[Display], MATCH( "&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;", "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[ID], 0 ) ),
"&amp;"        INDEX( "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[Display], MATCH( "&amp;meta_TypedModelElements[[#This Row],[Reference - Refering Column in Excel]]&amp;", "&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;"[ID], 0 ) )
"&amp;"    ))), "&amp;CHAR(34)&amp;""&amp;CHAR(34)&amp;")"
)</f><v/></c><c r="BC2" s="14" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Reference","",
"                If referingColumnName = "&amp;CHAR(34)&amp;meta_TypedModelElements[[#This Row],[Name or Type]]&amp;CHAR(34)&amp;" Then
"&amp;"                   referedTableName = "&amp;CHAR(34)&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;CHAR(34)&amp;"
"&amp;"                   referedColumnName = "&amp;CHAR(34)&amp;"Display"&amp;CHAR(34)&amp;"
"&amp;"                   Call StaticCode.updateIdOnNameChange(cellRef, referingTableName, referingColumnName, referedTableName, referedColumnName)
"&amp;"            End If")</f><v/></c><c r="BD2" s="14" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]&lt;&gt;"_Reference","",
"                If referingColumnName = "&amp;CHAR(34)&amp;meta_TypedModelElements[[#This Row],[Property - Owning Class]]&amp;" - "&amp;meta_TypedModelElements[[#This Row],[Name or Type]]&amp;CHAR(34)&amp;" Then
"&amp;"                   referedTableName = "&amp;CHAR(34)&amp;meta_TypedModelElements[[#This Row],[Reference - Referenced Excel Table]]&amp;CHAR(34)&amp;"
"&amp;"                   referedColumnName = "&amp;CHAR(34)&amp;"Display"&amp;CHAR(34)&amp;"
"&amp;"                   Call StaticCode.updateIdOnNameChange(cellRef, referingTableName, referingColumnName, referedTableName, referedColumnName)
"&amp;"            End If")</f><v/></c><c r="BE2" s="14"/><c r="BF2" s="14" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Kind:srcLastSaved]]="_Parameter","",IF(AND(meta_TypedModelElements[[#This Row],[Package]]="util",meta_TypedModelElements[[#This Row],[Containing Class]]=0), "public", "method"))</f><v>method</v></c><c r="BG2" s="14"/><c r="BH2" s="14" t="str"><f>IF(meta_TypedModelElements[[#This Row],[Feature - VBA Type]]="public","Public Function "&amp;meta_TypedModelElements[[#This Row],[Name or Type Camel Case Lower]]&amp;"("&amp;meta_TypedModelElements[[#This Row],[Function - Parameters in VBA Header]]&amp;") As "&amp;meta_TypedModelElements[[#This Row],[Type Derived:display]],
IF(meta_TypedModelElements[[#This Row],[Feature - VBA Type]]="method","METHOD:TODO",""))</f><v>METHOD:TODO</v></c><c r="BI2" s="14"/><c r="BN2" s="2"/></row></sheetData><phoneticPr fontId="2" type="noConversion"/><dataValidations count="2"><dataValidation type="list" allowBlank="1" showInputMessage="1" showErrorMessage="1" sqref="L2 D2 AG2" xr:uid="{99B39FFC-374C-4A52-8389-D32F99C394CD}"><formula1>INDIRECT("meta_Classifiers[Display Qualified]")</formula1></dataValidation><dataValidation type="list" allowBlank="1" showInputMessage="1" showErrorMessage="1" sqref="AL2:AM2 AO2 AW2 AY2 AS2" xr:uid="{1BFC2017-A5D6-4BC3-9C1C-93BDBF7CA528}"><formula1>INDIRECT("meta_TypedModelElements[Display Qualified]")</formula1></dataValidation></dataValidations><pageMargins left="0.7" right="0.7" top="0.78740157499999996" bottom="0.78740157499999996" header="0.3" footer="0.3"/><pageSetup paperSize="9" orientation="portrait" r:id="rId1"/><tableParts count="1"><tablePart r:id="rId2"/></tableParts></worksheet>